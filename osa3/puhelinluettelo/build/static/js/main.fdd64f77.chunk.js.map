{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","_ref","filter","filterChange","react_default","a","createElement","value","onChange","Notification","message","error","className","PersonForm","submit","nameChange","name","numberChange","number","Fragment","onSubmit","type","Persons","persons","remove","personList","map","person","key","onClick","id","url","services_persons","axios","get","then","response","data","newPerson","post","delUrl","concat","delete","put","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notification","setNotification","_useState11","_useState12","notificationType","setType","useEffect","personService","initialList","notify","setTimeout","personsToShow","toLowerCase","includes","components_Notification","components_Filter","e","target","components_PersonForm","preventDefault","exists","forEach","window","confirm","find","p","changedPerson","objectSpread","returnedPerson","catch","components_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fdd64f77.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filter, filterChange }) => {\n  return (\n    <div>\n      <label>Filter shown with </label>\n      <input value={filter} onChange={filterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ message, error }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={\"\" + (error ? \"error\" : \"notice\")}>{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst PersonForm = ({ submit, nameChange, name, numberChange, number }) => {\n  return (\n    <>\n      <h3>Add a new</h3>\n      <form onSubmit={submit}>\n        <div>\n          <label>Name: </label>\n          <input value={name} onChange={nameChange} />\n        </div>\n        <div>\n          <label>Number: </label>\n          <input value={number} onChange={numberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, remove }) => {\n  const personList = persons.map(person => (\n    <p key={person.name}>\n      {person.name} {person.number}{\" \"}\n      <button onClick={remove(person.id, person.name)}>Delete</button>\n    </p>\n  ));\n\n  return <>{personList}</>;\n};\n\nexport default Persons;\n","import axios from 'axios';\nconst url = 'api/persons';\n\nconst getAll = () => {\n    const request = axios.get(url);\n    return request.then(response => {\n        return response.data;\n    });\n};\n\nconst create = newPerson => {\n    const request = axios.post(url, newPerson);\n    return request.then(response => {\n        return response.data;\n    });\n};\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${url}/${id}`, newPerson);\n    return request.then(response => {\n        return response.data;\n    });\n};\n\nconst remove = id => {\n    const delUrl = `${url}/${id}`;\n    const request = axios.delete(delUrl);\n    return request.then(response => {\n        return response.data;\n    });\n};\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update,\n};\n","import React, {useEffect, useState} from 'react';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personService from './services/persons';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filter, setFilter] = useState('');\n    const [notification, setNotification] = useState(null);\n    const [notificationType, setType] = useState(false);\n\n    const effectHook = () => {\n        personService.getAll().then(initialList => {\n            setPersons(initialList);\n        });\n    };\n\n    useEffect(effectHook, []);\n\n    const notify = (message, error) => {\n        setType(error);\n        setNotification(message);\n        setTimeout(() => {\n            setNotification(null);\n        }, 5000);\n    };\n\n    const onNameChange = e => {\n        setNewName(e.target.value);\n    };\n\n    const onNumberChange = e => {\n        setNewNumber(e.target.value);\n    };\n\n    const onFilterChange = e => {\n        setFilter(e.target.value);\n    };\n\n    const submitPerson = e => {\n        e.preventDefault();\n        let exists = false;\n        /**\n         * Randomize the id so we don't have to put too much\n         * effort in to it at this time\n         */\n        persons.forEach(person => {\n            if (newName === person.name) {\n                exists = true;\n            }\n        });\n\n        if (exists) {\n            const confirm = window.confirm(\n                `${newName} is already added to phonebook, replace the old number with a new one?`,\n            );\n\n            if (confirm) {\n                const person = persons.find(p => p.name === newName);\n                const changedPerson = {...person, number: newNumber};\n                personService\n                    .update(person.id, changedPerson)\n                    .then(returnedPerson => {\n                        setPersons(\n                            persons.map(person =>\n                                person.id !== changedPerson.id\n                                    ? person\n                                    : returnedPerson,\n                            ),\n                        );\n                        notify(\n                            `Changed ${person.name}'s number to ${newNumber}`,\n                            false,\n                        );\n                    })\n                    .catch(() => {\n                        notify(\n                            `Information of ${\n                                person.name\n                            } has already been removed from the server`,\n                            true,\n                        );\n                    });\n            }\n        } else {\n            const person = {\n                name: newName,\n                number: newNumber,\n            };\n            personService\n                .create(person)\n                .then(newPerson => {\n                    setPersons(persons.concat(newPerson));\n                    notify(`Added ${newName}`, false);\n                    setNewName('');\n                    setNewNumber('');\n                })\n                .catch(() => {\n                    notify(\n                        `Information of ${\n                            person.name\n                        } has already been removed from the server`,\n                        true,\n                    );\n                });\n        }\n    };\n\n    const removePerson = (id, name) => () => {\n        const confirm = window.confirm(`Delete ${name}?`);\n\n        if (confirm) {\n            personService\n                .remove(id)\n                .then(() => {\n                    setPersons(persons.filter(p => p.id !== id));\n                    notify(`${name} succesfully removed.`, false);\n                })\n                .catch(() => {\n                    notify(\n                        `Information of ${name} has already been removed from the server`,\n                        true,\n                    );\n                });\n        }\n    };\n\n    const personsToShow =\n        filter === ''\n            ? persons\n            : persons.filter(person =>\n                  person.name.toLowerCase().includes(filter.toLowerCase()),\n              );\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notification} error={notificationType} />\n            <Filter filter={filter} filterChange={onFilterChange} />\n            <PersonForm\n                submit={submitPerson}\n                nameChange={onNameChange}\n                numberChange={onNumberChange}\n                name={newName}\n                number={newNumber}\n            />\n            <h2>Numbers</h2>\n            <Persons persons={personsToShow} remove={removePerson} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}